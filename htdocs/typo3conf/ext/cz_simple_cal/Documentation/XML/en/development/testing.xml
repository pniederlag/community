<?xml version="1.0" encoding="UTF-8"?>
<chapter xml:id="development.testing"
	 xmlns:xlink="http://www.w3.org/1999/xlink"
     xmlns:xi="http://www.w3.org/2001/XInclude"
     xmlns:xhtml="http://www.w3.org/1999/xhtml"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:ns="http://docbook.org/ns/docbook"
     xmlns:mathml="http://www.w3.org/1998/Math/MathML">

	<title>Testing</title>
		<para>This section will explain how to set up a testing environment for the extension.</para>
		
		<section xml:id="development.testing.unit">
			<title>Setting up Unit Tests</title>
			<para>
				You need to install the extension <productname>phpunit</productname> in order to run Unit Tests. You can 
				find the extension <link xlink:href="http://typo3.org/extensions/repository/view/phpunit/current/"><productname>phpunit</productname> on TER</link>. 
			</para>
			<para>
				There is not much to say on the installation of the extension. It is straight forward and as it comes bundled with
				a PHPUnit library, so you won't even need to install a PEAR package. If you should encounter any difficulties, consult
				the <link xlink:href="http://typo3.org/documentation/document-library/extension-manuals/phpunit/3.4.12/view/">documentation on the internet</link> or your local machine. 
			</para>
			<para>
				After successful installation you should see the PHPUnit module in the Admin Section. Click it and select 
				<productname>cz_simple_cal</productname> as extension to run the unit tests. 
				Make sure that all the options <literal>Success</literal>,  <literal>Failure</literal>, <literal>Skipped</literal> and <literal>Error</literal>
				are checked. Otherwise you might miss a faulty behaviour.
				Click <computeroutput>Run all tests</computeroutput> and all the tests should be run. If the bar is not green
				after running all tests or the word "Success" is not displayed at the bottom of the list, something went wrong.  
			</para>
		</section>
		
		<section xml:id="development.testing.selenium">
			<title>Setting up Selenium Tests</title>
			<tip>
				<para>
					You should use a seperate TYPO3 installation and database for running selenium tests as you need to create some pages
					for testing.
				</para>
			</tip>
			<procedure>
				<title>Setting up Selenium Tests</title>
				<step>
					<para>
						You should have the extension <productname>phpunit</productname> installed as described in the last section.
						Additionally you need the extension <productname>selenium</productname>. You can ignore the installed module
						in the Admin Tools as even the selenium tests are run inside PHPUnit.
					</para>
					<note>
						<para>
							If the <productname>selenium</productname> extension is not enabled, all Selenium Tests will be skipped automatically.
						</para>
					</note>
				</step>
				<step>
					<para>
						Now install <productname>Selenium Remote Control (RC)</productname> - if you don't have it running already.<sbr/>
						Download it at <link xlink:href="http://seleniumhq.org/download/">selenium.org</link> and unpack. All you need is 
						the <filename class="directory">selenium-remote-control-1.x.x/selenium-server-1.x.x</filename> folder - you might as well delete
						all the others.<sbr/>
						Run the <filename>selenium-server.jar</filename> using <productname>JAVA</productname>, for example by typing
						<userinput>java -jar selenium-server.jar</userinput> on your console.
					</para>
				</step>
				<step>
					<para>Import the data using the t3d-Importer.</para>
					<substeps>
						<step>
							<para>
								Therefore enter the backend and click the <productname>TYPO3</productname>-Icon in the pagetree.
								The context menu holds the option <literal>Import from .t3d</literal>.
							</para>
						</step>
						<step>
							<para>
								In the tab labeled <literal>Import</literal> select the option <literal>Force ALL UIDs values</literal>.
							</para>
							<note>
								<para>
									If you decide to <emphasis>not</emphasis> set this option, all you have to do is set the TypoScript 
									constants in the root template with the pid of your <literal>data</literal> folder.
								</para>
								<para>
									But if you force all uids, updating the test data for newer versions of this extension might
									turn out a little easier.
								</para>
							</note>
						</step>
						<step>
							<para>
								Select the file <filename>EXT:cz_simple_cal/Resources/Private/Tests/selenium-data.t3d</filename>
								in the <literal>Upload</literal> tab.
							</para>
						</step>
						<step>
							<para>
								Hit the <literal>upload files button</literal>.
							</para>
						</step>
						<step>
							<para>
								Jump back to the <literal>Import</literal> tab and hit the <literal>Import</literal> button.
							</para>
						</step>
					</substeps>
				</step>
				<step>
					<para>
						Delete the event labeled <literal>Deleted event</literal> on the <literal>data</literal> page.
					</para>
				</step>
				<step>
					<para>
						Use the <productname>scheduler</productname> to create a <literal>Index all events (cz_simple_cal)</literal>-task and run it to
						create all the recurring events.
					</para>
					<note>
						<para>The extension <productname>scheduler</productname> is shipped with the <productname>TYPO3</productname> core but disabled by default.</para>
					</note>
				</step>
				<step>
					<para>
						Run the test by selecting the <literal>PHPUnit</literal> module in the backend, select <literal>cz_simple_cal</literal>
						as extension and <literal>Tx_CzSimpleCalTests_Selenium_Tests</literal> as test case and hit
						<literal>Run test case file</literal>.
					</para>
				</step>
			</procedure>
		</section>
		
</chapter>